{"is_source_file": true, "format": "TypeScript (Vue 3 composition API)", "description": "A Vue composable function that detects if the viewport is considered mobile based on a maximum width threshold. It sets up event listeners to update the state on window resize events.", "external_files": ["vue"], "external_methods": ["onMounted", "onUnmounted", "ref"], "published": ["useMedia"], "classes": [], "methods": [{"name": "export function useMedia() { useMedia", "description": "Defines a reactive media query condition for mobile detection, setting up lifecycle hooks to add and remove resize event listeners.", "scope": "", "scopeKind": ""}], "calls": ["window.matchMedia", "window.addEventListener", "window.removeEventListener"], "search-terms": ["useMedia", "vue reactive media detection", "viewport size detection"], "state": 2, "file_id": 12, "knowledge_revision": 38, "git_revision": "", "revision_history": [{"26": ""}, {"38": ""}], "ctags": [{"_type": "tag", "name": "isMobile", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17275-17284/notes_frontend/src/composables/useMedia.ts", "pattern": "/^  const isMobile = ref(false);$/", "language": "TypeScript", "kind": "constant", "scope": "useMedia", "scopeKind": "function"}, {"_type": "tag", "name": "useMedia", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17275-17284/notes_frontend/src/composables/useMedia.ts", "pattern": "/^export function useMedia() {$/", "language": "TypeScript", "kind": "function"}], "hash": "b0bf49e41d0027d0bbabf7679d325104", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/composables/useMedia.ts"}